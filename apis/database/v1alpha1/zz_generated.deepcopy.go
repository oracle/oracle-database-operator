//go:build !ignore_autogenerated

/*
** Copyright (c) 2022 Oracle and/or its affiliates.
**
** The Universal Permissive License (UPL), Version 1.0
**
** Subject to the condition set forth below, permission is hereby granted to any
** person obtaining a copy of this software, associated documentation and/or data
** (collectively the "Software"), free of charge and under any and all copyright
** rights in the Software, and any and all patent rights owned or freely
** licensable by each licensor hereunder covering either (i) the unmodified
** Software as contributed to or provided by such licensor, or (ii) the Larger
** Works (as defined below), to deal in both
**
** (a) the Software, and
** (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if
** one is included with the Software (each a "Larger Work" to which the Software
** is contributed by such licensors),
**
** without restriction, including without limitation the rights to copy, create
** derivative works of, display, perform, and distribute the Software and make,
** use, sell, offer for sale, import, export, have made, and have sold the
** Software and the Larger Work(s), and to sublicense the foregoing rights on
** either these or other terms.
**
** This license is subject to the following condition:
** The above copyright notice and either this complete permission notice or at
** a minimum a reference to the UPL must be included in all copies or
** substantial portions of the Software.
**
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
** SOFTWARE.
 */

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcdSpec) DeepCopyInto(out *AcdSpec) {
	*out = *in
	in.K8sAcd.DeepCopyInto(&out.K8sAcd)
	in.OciAcd.DeepCopyInto(&out.OciAcd)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcdSpec.
func (in *AcdSpec) DeepCopy() *AcdSpec {
	if in == nil {
		return nil
	}
	out := new(AcdSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabase) DeepCopyInto(out *AutonomousContainerDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabase.
func (in *AutonomousContainerDatabase) DeepCopy() *AutonomousContainerDatabase {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousContainerDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseList) DeepCopyInto(out *AutonomousContainerDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutonomousContainerDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseList.
func (in *AutonomousContainerDatabaseList) DeepCopy() *AutonomousContainerDatabaseList {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousContainerDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseSpec) DeepCopyInto(out *AutonomousContainerDatabaseSpec) {
	*out = *in
	if in.AutonomousContainerDatabaseOCID != nil {
		in, out := &in.AutonomousContainerDatabaseOCID, &out.AutonomousContainerDatabaseOCID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentOCID != nil {
		in, out := &in.CompartmentOCID, &out.CompartmentOCID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.AutonomousExadataVMClusterOCID != nil {
		in, out := &in.AutonomousExadataVMClusterOCID, &out.AutonomousExadataVMClusterOCID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.OCIConfig.DeepCopyInto(&out.OCIConfig)
	if in.HardLink != nil {
		in, out := &in.HardLink, &out.HardLink
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseSpec.
func (in *AutonomousContainerDatabaseSpec) DeepCopy() *AutonomousContainerDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousContainerDatabaseStatus) DeepCopyInto(out *AutonomousContainerDatabaseStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousContainerDatabaseStatus.
func (in *AutonomousContainerDatabaseStatus) DeepCopy() *AutonomousContainerDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(AutonomousContainerDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabase) DeepCopyInto(out *AutonomousDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabase.
func (in *AutonomousDatabase) DeepCopy() *AutonomousDatabase {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseBackup) DeepCopyInto(out *AutonomousDatabaseBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseBackup.
func (in *AutonomousDatabaseBackup) DeepCopy() *AutonomousDatabaseBackup {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseBackupList) DeepCopyInto(out *AutonomousDatabaseBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutonomousDatabaseBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseBackupList.
func (in *AutonomousDatabaseBackupList) DeepCopy() *AutonomousDatabaseBackupList {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseBackupSpec) DeepCopyInto(out *AutonomousDatabaseBackupSpec) {
	*out = *in
	in.Target.DeepCopyInto(&out.Target)
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.AutonomousDatabaseBackupOCID != nil {
		in, out := &in.AutonomousDatabaseBackupOCID, &out.AutonomousDatabaseBackupOCID
		*out = new(string)
		**out = **in
	}
	if in.IsLongTermBackup != nil {
		in, out := &in.IsLongTermBackup, &out.IsLongTermBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodInDays != nil {
		in, out := &in.RetentionPeriodInDays, &out.RetentionPeriodInDays
		*out = new(int)
		**out = **in
	}
	in.OCIConfig.DeepCopyInto(&out.OCIConfig)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseBackupSpec.
func (in *AutonomousDatabaseBackupSpec) DeepCopy() *AutonomousDatabaseBackupSpec {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseBackupStatus) DeepCopyInto(out *AutonomousDatabaseBackupStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseBackupStatus.
func (in *AutonomousDatabaseBackupStatus) DeepCopy() *AutonomousDatabaseBackupStatus {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseBase) DeepCopyInto(out *AutonomousDatabaseBase) {
	*out = *in
	if in.CompartmentId != nil {
		in, out := &in.CompartmentId, &out.CompartmentId
		*out = new(string)
		**out = **in
	}
	in.AutonomousContainerDatabase.DeepCopyInto(&out.AutonomousContainerDatabase)
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DbName != nil {
		in, out := &in.DbName, &out.DbName
		*out = new(string)
		**out = **in
	}
	if in.DbVersion != nil {
		in, out := &in.DbVersion, &out.DbVersion
		*out = new(string)
		**out = **in
	}
	if in.DataStorageSizeInTBs != nil {
		in, out := &in.DataStorageSizeInTBs, &out.DataStorageSizeInTBs
		*out = new(int)
		**out = **in
	}
	if in.CpuCoreCount != nil {
		in, out := &in.CpuCoreCount, &out.CpuCoreCount
		*out = new(int)
		**out = **in
	}
	if in.ComputeCount != nil {
		in, out := &in.ComputeCount, &out.ComputeCount
		*out = new(float32)
		**out = **in
	}
	if in.OcpuCount != nil {
		in, out := &in.OcpuCount, &out.OcpuCount
		*out = new(float32)
		**out = **in
	}
	in.AdminPassword.DeepCopyInto(&out.AdminPassword)
	if in.IsAutoScalingEnabled != nil {
		in, out := &in.IsAutoScalingEnabled, &out.IsAutoScalingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsDedicated != nil {
		in, out := &in.IsDedicated, &out.IsDedicated
		*out = new(bool)
		**out = **in
	}
	if in.IsFreeTier != nil {
		in, out := &in.IsFreeTier, &out.IsFreeTier
		*out = new(bool)
		**out = **in
	}
	if in.IsAccessControlEnabled != nil {
		in, out := &in.IsAccessControlEnabled, &out.IsAccessControlEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WhitelistedIps != nil {
		in, out := &in.WhitelistedIps, &out.WhitelistedIps
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SubnetId != nil {
		in, out := &in.SubnetId, &out.SubnetId
		*out = new(string)
		**out = **in
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PrivateEndpointLabel != nil {
		in, out := &in.PrivateEndpointLabel, &out.PrivateEndpointLabel
		*out = new(string)
		**out = **in
	}
	if in.IsMtlsConnectionRequired != nil {
		in, out := &in.IsMtlsConnectionRequired, &out.IsMtlsConnectionRequired
		*out = new(bool)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseBase.
func (in *AutonomousDatabaseBase) DeepCopy() *AutonomousDatabaseBase {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseBase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseClone) DeepCopyInto(out *AutonomousDatabaseClone) {
	*out = *in
	in.AutonomousDatabaseBase.DeepCopyInto(&out.AutonomousDatabaseBase)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseClone.
func (in *AutonomousDatabaseClone) DeepCopy() *AutonomousDatabaseClone {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseClone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseDetails) DeepCopyInto(out *AutonomousDatabaseDetails) {
	*out = *in
	in.AutonomousDatabaseBase.DeepCopyInto(&out.AutonomousDatabaseBase)
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseDetails.
func (in *AutonomousDatabaseDetails) DeepCopy() *AutonomousDatabaseDetails {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseList) DeepCopyInto(out *AutonomousDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutonomousDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseList.
func (in *AutonomousDatabaseList) DeepCopy() *AutonomousDatabaseList {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseRestore) DeepCopyInto(out *AutonomousDatabaseRestore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseRestore.
func (in *AutonomousDatabaseRestore) DeepCopy() *AutonomousDatabaseRestore {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseRestore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseRestore) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseRestoreList) DeepCopyInto(out *AutonomousDatabaseRestoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutonomousDatabaseRestore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseRestoreList.
func (in *AutonomousDatabaseRestoreList) DeepCopy() *AutonomousDatabaseRestoreList {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseRestoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutonomousDatabaseRestoreList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseRestoreSpec) DeepCopyInto(out *AutonomousDatabaseRestoreSpec) {
	*out = *in
	in.Target.DeepCopyInto(&out.Target)
	in.Source.DeepCopyInto(&out.Source)
	in.OCIConfig.DeepCopyInto(&out.OCIConfig)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseRestoreSpec.
func (in *AutonomousDatabaseRestoreSpec) DeepCopy() *AutonomousDatabaseRestoreSpec {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseRestoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseRestoreStatus) DeepCopyInto(out *AutonomousDatabaseRestoreStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseRestoreStatus.
func (in *AutonomousDatabaseRestoreStatus) DeepCopy() *AutonomousDatabaseRestoreStatus {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseRestoreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseSpec) DeepCopyInto(out *AutonomousDatabaseSpec) {
	*out = *in
	in.Details.DeepCopyInto(&out.Details)
	in.Clone.DeepCopyInto(&out.Clone)
	in.Wallet.DeepCopyInto(&out.Wallet)
	in.OciConfig.DeepCopyInto(&out.OciConfig)
	if in.HardLink != nil {
		in, out := &in.HardLink, &out.HardLink
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseSpec.
func (in *AutonomousDatabaseSpec) DeepCopy() *AutonomousDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutonomousDatabaseStatus) DeepCopyInto(out *AutonomousDatabaseStatus) {
	*out = *in
	if in.AllConnectionStrings != nil {
		in, out := &in.AllConnectionStrings, &out.AllConnectionStrings
		*out = make([]ConnectionStringProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutonomousDatabaseStatus.
func (in *AutonomousDatabaseStatus) DeepCopy() *AutonomousDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(AutonomousDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Backupconfig) DeepCopyInto(out *Backupconfig) {
	*out = *in
	if in.AutoBackupEnabled != nil {
		in, out := &in.AutoBackupEnabled, &out.AutoBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryWindowsInDays != nil {
		in, out := &in.RecoveryWindowsInDays, &out.RecoveryWindowsInDays
		*out = new(int)
		**out = **in
	}
	if in.AutoBackupWindow != nil {
		in, out := &in.AutoBackupWindow, &out.AutoBackupWindow
		*out = new(string)
		**out = **in
	}
	if in.BackupDestinationDetails != nil {
		in, out := &in.BackupDestinationDetails, &out.BackupDestinationDetails
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Backupconfig.
func (in *Backupconfig) DeepCopy() *Backupconfig {
	if in == nil {
		return nil
	}
	out := new(Backupconfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogSpec) DeepCopyInto(out *CatalogSpec) {
	*out = *in
	if in.EnvVars != nil {
		in, out := &in.EnvVars, &out.EnvVars
		*out = make([]EnvironmentVariable, len(*in))
		copy(*out, *in)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(corev1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PvAnnotations != nil {
		in, out := &in.PvAnnotations, &out.PvAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PvMatchLabels != nil {
		in, out := &in.PvMatchLabels, &out.PvMatchLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ImagePulllPolicy != nil {
		in, out := &in.ImagePulllPolicy, &out.ImagePulllPolicy
		*out = new(corev1.PullPolicy)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogSpec.
func (in *CatalogSpec) DeepCopy() *CatalogSpec {
	if in == nil {
		return nil
	}
	out := new(CatalogSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringProfile) DeepCopyInto(out *ConnectionStringProfile) {
	*out = *in
	if in.ConnectionStrings != nil {
		in, out := &in.ConnectionStrings, &out.ConnectionStrings
		*out = make([]ConnectionStringSpec, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringProfile.
func (in *ConnectionStringProfile) DeepCopy() *ConnectionStringProfile {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringSpec) DeepCopyInto(out *ConnectionStringSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringSpec.
func (in *ConnectionStringSpec) DeepCopy() *ConnectionStringSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataguardBroker) DeepCopyInto(out *DataguardBroker) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataguardBroker.
func (in *DataguardBroker) DeepCopy() *DataguardBroker {
	if in == nil {
		return nil
	}
	out := new(DataguardBroker)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataguardBroker) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataguardBrokerList) DeepCopyInto(out *DataguardBrokerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataguardBroker, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataguardBrokerList.
func (in *DataguardBrokerList) DeepCopy() *DataguardBrokerList {
	if in == nil {
		return nil
	}
	out := new(DataguardBrokerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataguardBrokerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataguardBrokerSpec) DeepCopyInto(out *DataguardBrokerSpec) {
	*out = *in
	if in.StandbyDatabaseRefs != nil {
		in, out := &in.StandbyDatabaseRefs, &out.StandbyDatabaseRefs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ServiceAnnotations != nil {
		in, out := &in.ServiceAnnotations, &out.ServiceAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataguardBrokerSpec.
func (in *DataguardBrokerSpec) DeepCopy() *DataguardBrokerSpec {
	if in == nil {
		return nil
	}
	out := new(DataguardBrokerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataguardBrokerStatus) DeepCopyInto(out *DataguardBrokerStatus) {
	*out = *in
	if in.DatabasesInDataguardConfig != nil {
		in, out := &in.DatabasesInDataguardConfig, &out.DatabasesInDataguardConfig
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataguardBrokerStatus.
func (in *DataguardBrokerStatus) DeepCopy() *DataguardBrokerStatus {
	if in == nil {
		return nil
	}
	out := new(DataguardBrokerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbCloneConfig) DeepCopyInto(out *DbCloneConfig) {
	*out = *in
	if in.SshPublicKeys != nil {
		in, out := &in.SshPublicKeys, &out.SshPublicKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbCloneConfig.
func (in *DbCloneConfig) DeepCopy() *DbCloneConfig {
	if in == nil {
		return nil
	}
	out := new(DbCloneConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbCloneStatus) DeepCopyInto(out *DbCloneStatus) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.SshPublicKeys != nil {
		in, out := &in.SshPublicKeys, &out.SshPublicKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbCloneStatus.
func (in *DbCloneStatus) DeepCopy() *DbCloneStatus {
	if in == nil {
		return nil
	}
	out := new(DbCloneStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbStatus) DeepCopyInto(out *DbStatus) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbStatus.
func (in *DbStatus) DeepCopy() *DbStatus {
	if in == nil {
		return nil
	}
	out := new(DbStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbSystemDetails) DeepCopyInto(out *DbSystemDetails) {
	*out = *in
	if in.SshPublicKeys != nil {
		in, out := &in.SshPublicKeys, &out.SshPublicKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FaultDomains != nil {
		in, out := &in.FaultDomains, &out.FaultDomains
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(int)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.DbBackupConfig.DeepCopyInto(&out.DbBackupConfig)
	out.KMSConfig = in.KMSConfig
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbSystemDetails.
func (in *DbSystemDetails) DeepCopy() *DbSystemDetails {
	if in == nil {
		return nil
	}
	out := new(DbSystemDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbWorkrequests) DeepCopyInto(out *DbWorkrequests) {
	*out = *in
	if in.OperationType != nil {
		in, out := &in.OperationType, &out.OperationType
		*out = new(string)
		**out = **in
	}
	if in.OperationId != nil {
		in, out := &in.OperationId, &out.OperationId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbWorkrequests.
func (in *DbWorkrequests) DeepCopy() *DbWorkrequests {
	if in == nil {
		return nil
	}
	out := new(DbWorkrequests)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbcsSystem) DeepCopyInto(out *DbcsSystem) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbcsSystem.
func (in *DbcsSystem) DeepCopy() *DbcsSystem {
	if in == nil {
		return nil
	}
	out := new(DbcsSystem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DbcsSystem) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbcsSystemList) DeepCopyInto(out *DbcsSystemList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DbcsSystem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbcsSystemList.
func (in *DbcsSystemList) DeepCopy() *DbcsSystemList {
	if in == nil {
		return nil
	}
	out := new(DbcsSystemList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DbcsSystemList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbcsSystemSpec) DeepCopyInto(out *DbcsSystemSpec) {
	*out = *in
	in.DbSystem.DeepCopyInto(&out.DbSystem)
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.OCIConfigMap != nil {
		in, out := &in.OCIConfigMap, &out.OCIConfigMap
		*out = new(string)
		**out = **in
	}
	if in.OCISecret != nil {
		in, out := &in.OCISecret, &out.OCISecret
		*out = new(string)
		**out = **in
	}
	if in.DbClone != nil {
		in, out := &in.DbClone, &out.DbClone
		*out = new(DbCloneConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PdbConfigs != nil {
		in, out := &in.PdbConfigs, &out.PdbConfigs
		*out = make([]PDBConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbBackupId != nil {
		in, out := &in.DbBackupId, &out.DbBackupId
		*out = new(string)
		**out = **in
	}
	if in.DatabaseId != nil {
		in, out := &in.DatabaseId, &out.DatabaseId
		*out = new(string)
		**out = **in
	}
	out.KMSConfig = in.KMSConfig
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbcsSystemSpec.
func (in *DbcsSystemSpec) DeepCopy() *DbcsSystemSpec {
	if in == nil {
		return nil
	}
	out := new(DbcsSystemSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbcsSystemStatus) DeepCopyInto(out *DbcsSystemStatus) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.DataStoragePercentage != nil {
		in, out := &in.DataStoragePercentage, &out.DataStoragePercentage
		*out = new(int)
		**out = **in
	}
	if in.DataStorageSizeInGBs != nil {
		in, out := &in.DataStorageSizeInGBs, &out.DataStorageSizeInGBs
		*out = new(int)
		**out = **in
	}
	if in.RecoStorageSizeInGB != nil {
		in, out := &in.RecoStorageSizeInGB, &out.RecoStorageSizeInGB
		*out = new(int)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.DbInfo != nil {
		in, out := &in.DbInfo, &out.DbInfo
		*out = make([]DbStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Network.DeepCopyInto(&out.Network)
	if in.WorkRequests != nil {
		in, out := &in.WorkRequests, &out.WorkRequests
		*out = make([]DbWorkrequests, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.KMSDetailsStatus = in.KMSDetailsStatus
	in.DbCloneStatus.DeepCopyInto(&out.DbCloneStatus)
	if in.PdbDetailsStatus != nil {
		in, out := &in.PdbDetailsStatus, &out.PdbDetailsStatus
		*out = make([]PDBDetailsStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbcsSystemStatus.
func (in *DbcsSystemStatus) DeepCopy() *DbcsSystemStatus {
	if in == nil {
		return nil
	}
	out := new(DbcsSystemStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariable) DeepCopyInto(out *EnvironmentVariable) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariable.
func (in *EnvironmentVariable) DeepCopy() *EnvironmentVariable {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GsmServiceSpec) DeepCopyInto(out *GsmServiceSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GsmServiceSpec.
func (in *GsmServiceSpec) DeepCopy() *GsmServiceSpec {
	if in == nil {
		return nil
	}
	out := new(GsmServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GsmShardDetails) DeepCopyInto(out *GsmShardDetails) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GsmShardDetails.
func (in *GsmShardDetails) DeepCopy() *GsmShardDetails {
	if in == nil {
		return nil
	}
	out := new(GsmShardDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GsmShardGroupSpec) DeepCopyInto(out *GsmShardGroupSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GsmShardGroupSpec.
func (in *GsmShardGroupSpec) DeepCopy() *GsmShardGroupSpec {
	if in == nil {
		return nil
	}
	out := new(GsmShardGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GsmShardSpaceSpec) DeepCopyInto(out *GsmShardSpaceSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GsmShardSpaceSpec.
func (in *GsmShardSpaceSpec) DeepCopy() *GsmShardSpaceSpec {
	if in == nil {
		return nil
	}
	out := new(GsmShardSpaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GsmSpec) DeepCopyInto(out *GsmSpec) {
	*out = *in
	if in.EnvVars != nil {
		in, out := &in.EnvVars, &out.EnvVars
		*out = make([]EnvironmentVariable, len(*in))
		copy(*out, *in)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(corev1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PvAnnotations != nil {
		in, out := &in.PvAnnotations, &out.PvAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PvMatchLabels != nil {
		in, out := &in.PvMatchLabels, &out.PvMatchLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ImagePulllPolicy != nil {
		in, out := &in.ImagePulllPolicy, &out.ImagePulllPolicy
		*out = new(corev1.PullPolicy)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GsmSpec.
func (in *GsmSpec) DeepCopy() *GsmSpec {
	if in == nil {
		return nil
	}
	out := new(GsmSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GsmStatus) DeepCopyInto(out *GsmStatus) {
	*out = *in
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GsmStatus.
func (in *GsmStatus) DeepCopy() *GsmStatus {
	if in == nil {
		return nil
	}
	out := new(GsmStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GsmStatusDetails) DeepCopyInto(out *GsmStatusDetails) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GsmStatusDetails.
func (in *GsmStatusDetails) DeepCopy() *GsmStatusDetails {
	if in == nil {
		return nil
	}
	out := new(GsmStatusDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *K8sAcdSpec) DeepCopyInto(out *K8sAcdSpec) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new K8sAcdSpec.
func (in *K8sAcdSpec) DeepCopy() *K8sAcdSpec {
	if in == nil {
		return nil
	}
	out := new(K8sAcdSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *K8sAdbBackupSpec) DeepCopyInto(out *K8sAdbBackupSpec) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new K8sAdbBackupSpec.
func (in *K8sAdbBackupSpec) DeepCopy() *K8sAdbBackupSpec {
	if in == nil {
		return nil
	}
	out := new(K8sAdbBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *K8sAdbSpec) DeepCopyInto(out *K8sAdbSpec) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new K8sAdbSpec.
func (in *K8sAdbSpec) DeepCopy() *K8sAdbSpec {
	if in == nil {
		return nil
	}
	out := new(K8sAdbSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *K8sSecretSpec) DeepCopyInto(out *K8sSecretSpec) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new K8sSecretSpec.
func (in *K8sSecretSpec) DeepCopy() *K8sSecretSpec {
	if in == nil {
		return nil
	}
	out := new(K8sSecretSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KMSConfig) DeepCopyInto(out *KMSConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KMSConfig.
func (in *KMSConfig) DeepCopy() *KMSConfig {
	if in == nil {
		return nil
	}
	out := new(KMSConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KMSDetailsStatus) DeepCopyInto(out *KMSDetailsStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KMSDetailsStatus.
func (in *KMSDetailsStatus) DeepCopy() *KMSDetailsStatus {
	if in == nil {
		return nil
	}
	out := new(KMSDetailsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OciAcdSpec) DeepCopyInto(out *OciAcdSpec) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OciAcdSpec.
func (in *OciAcdSpec) DeepCopy() *OciAcdSpec {
	if in == nil {
		return nil
	}
	out := new(OciAcdSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OciAdbSpec) DeepCopyInto(out *OciAdbSpec) {
	*out = *in
	if in.Ocid != nil {
		in, out := &in.Ocid, &out.Ocid
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OciAdbSpec.
func (in *OciAdbSpec) DeepCopy() *OciAdbSpec {
	if in == nil {
		return nil
	}
	out := new(OciAdbSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OciConfigSpec) DeepCopyInto(out *OciConfigSpec) {
	*out = *in
	if in.ConfigMapName != nil {
		in, out := &in.ConfigMapName, &out.ConfigMapName
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OciConfigSpec.
func (in *OciConfigSpec) DeepCopy() *OciConfigSpec {
	if in == nil {
		return nil
	}
	out := new(OciConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OciSecretSpec) DeepCopyInto(out *OciSecretSpec) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OciSecretSpec.
func (in *OciSecretSpec) DeepCopy() *OciSecretSpec {
	if in == nil {
		return nil
	}
	out := new(OciSecretSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleRestDataService) DeepCopyInto(out *OracleRestDataService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleRestDataService.
func (in *OracleRestDataService) DeepCopy() *OracleRestDataService {
	if in == nil {
		return nil
	}
	out := new(OracleRestDataService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OracleRestDataService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleRestDataServiceImage) DeepCopyInto(out *OracleRestDataServiceImage) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleRestDataServiceImage.
func (in *OracleRestDataServiceImage) DeepCopy() *OracleRestDataServiceImage {
	if in == nil {
		return nil
	}
	out := new(OracleRestDataServiceImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleRestDataServiceList) DeepCopyInto(out *OracleRestDataServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OracleRestDataService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleRestDataServiceList.
func (in *OracleRestDataServiceList) DeepCopy() *OracleRestDataServiceList {
	if in == nil {
		return nil
	}
	out := new(OracleRestDataServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OracleRestDataServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleRestDataServicePassword) DeepCopyInto(out *OracleRestDataServicePassword) {
	*out = *in
	if in.KeepSecret != nil {
		in, out := &in.KeepSecret, &out.KeepSecret
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleRestDataServicePassword.
func (in *OracleRestDataServicePassword) DeepCopy() *OracleRestDataServicePassword {
	if in == nil {
		return nil
	}
	out := new(OracleRestDataServicePassword)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleRestDataServicePersistence) DeepCopyInto(out *OracleRestDataServicePersistence) {
	*out = *in
	if in.SetWritePermissions != nil {
		in, out := &in.SetWritePermissions, &out.SetWritePermissions
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleRestDataServicePersistence.
func (in *OracleRestDataServicePersistence) DeepCopy() *OracleRestDataServicePersistence {
	if in == nil {
		return nil
	}
	out := new(OracleRestDataServicePersistence)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleRestDataServiceRestEnableSchemas) DeepCopyInto(out *OracleRestDataServiceRestEnableSchemas) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleRestDataServiceRestEnableSchemas.
func (in *OracleRestDataServiceRestEnableSchemas) DeepCopy() *OracleRestDataServiceRestEnableSchemas {
	if in == nil {
		return nil
	}
	out := new(OracleRestDataServiceRestEnableSchemas)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleRestDataServiceSpec) DeepCopyInto(out *OracleRestDataServiceSpec) {
	*out = *in
	if in.ServiceAnnotations != nil {
		in, out := &in.ServiceAnnotations, &out.ServiceAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.Image = in.Image
	in.OrdsPassword.DeepCopyInto(&out.OrdsPassword)
	in.AdminPassword.DeepCopyInto(&out.AdminPassword)
	if in.RestEnableSchemas != nil {
		in, out := &in.RestEnableSchemas, &out.RestEnableSchemas
		*out = make([]OracleRestDataServiceRestEnableSchemas, len(*in))
		copy(*out, *in)
	}
	in.Persistence.DeepCopyInto(&out.Persistence)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleRestDataServiceSpec.
func (in *OracleRestDataServiceSpec) DeepCopy() *OracleRestDataServiceSpec {
	if in == nil {
		return nil
	}
	out := new(OracleRestDataServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleRestDataServiceStatus) DeepCopyInto(out *OracleRestDataServiceStatus) {
	*out = *in
	out.Image = in.Image
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleRestDataServiceStatus.
func (in *OracleRestDataServiceStatus) DeepCopy() *OracleRestDataServiceStatus {
	if in == nil {
		return nil
	}
	out := new(OracleRestDataServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDBConfig) DeepCopyInto(out *PDBConfig) {
	*out = *in
	if in.PdbName != nil {
		in, out := &in.PdbName, &out.PdbName
		*out = new(string)
		**out = **in
	}
	if in.PdbAdminPassword != nil {
		in, out := &in.PdbAdminPassword, &out.PdbAdminPassword
		*out = new(string)
		**out = **in
	}
	if in.TdeWalletPassword != nil {
		in, out := &in.TdeWalletPassword, &out.TdeWalletPassword
		*out = new(string)
		**out = **in
	}
	if in.ShouldPdbAdminAccountBeLocked != nil {
		in, out := &in.ShouldPdbAdminAccountBeLocked, &out.ShouldPdbAdminAccountBeLocked
		*out = new(bool)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IsDelete != nil {
		in, out := &in.IsDelete, &out.IsDelete
		*out = new(bool)
		**out = **in
	}
	if in.PluggableDatabaseId != nil {
		in, out := &in.PluggableDatabaseId, &out.PluggableDatabaseId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDBConfig.
func (in *PDBConfig) DeepCopy() *PDBConfig {
	if in == nil {
		return nil
	}
	out := new(PDBConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDBConfigStatus) DeepCopyInto(out *PDBConfigStatus) {
	*out = *in
	if in.PdbName != nil {
		in, out := &in.PdbName, &out.PdbName
		*out = new(string)
		**out = **in
	}
	if in.ShouldPdbAdminAccountBeLocked != nil {
		in, out := &in.ShouldPdbAdminAccountBeLocked, &out.ShouldPdbAdminAccountBeLocked
		*out = new(bool)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PluggableDatabaseId != nil {
		in, out := &in.PluggableDatabaseId, &out.PluggableDatabaseId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDBConfigStatus.
func (in *PDBConfigStatus) DeepCopy() *PDBConfigStatus {
	if in == nil {
		return nil
	}
	out := new(PDBConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDBDetailsStatus) DeepCopyInto(out *PDBDetailsStatus) {
	*out = *in
	if in.PDBConfigStatus != nil {
		in, out := &in.PDBConfigStatus, &out.PDBConfigStatus
		*out = make([]PDBConfigStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDBDetailsStatus.
func (in *PDBDetailsStatus) DeepCopy() *PDBDetailsStatus {
	if in == nil {
		return nil
	}
	out := new(PDBDetailsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordSpec) DeepCopyInto(out *PasswordSpec) {
	*out = *in
	in.K8sSecret.DeepCopyInto(&out.K8sSecret)
	in.OciSecret.DeepCopyInto(&out.OciSecret)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordSpec.
func (in *PasswordSpec) DeepCopy() *PasswordSpec {
	if in == nil {
		return nil
	}
	out := new(PasswordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PitSpec) DeepCopyInto(out *PitSpec) {
	*out = *in
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PitSpec.
func (in *PitSpec) DeepCopy() *PitSpec {
	if in == nil {
		return nil
	}
	out := new(PitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortMapping) DeepCopyInto(out *PortMapping) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortMapping.
func (in *PortMapping) DeepCopy() *PortMapping {
	if in == nil {
		return nil
	}
	out := new(PortMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretDetails) DeepCopyInto(out *SecretDetails) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretDetails.
func (in *SecretDetails) DeepCopy() *SecretDetails {
	if in == nil {
		return nil
	}
	out := new(SecretDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardSpec) DeepCopyInto(out *ShardSpec) {
	*out = *in
	if in.EnvVars != nil {
		in, out := &in.EnvVars, &out.EnvVars
		*out = make([]EnvironmentVariable, len(*in))
		copy(*out, *in)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(corev1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PvAnnotations != nil {
		in, out := &in.PvAnnotations, &out.PvAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PvMatchLabels != nil {
		in, out := &in.PvMatchLabels, &out.PvMatchLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ImagePulllPolicy != nil {
		in, out := &in.ImagePulllPolicy, &out.ImagePulllPolicy
		*out = new(corev1.PullPolicy)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardSpec.
func (in *ShardSpec) DeepCopy() *ShardSpec {
	if in == nil {
		return nil
	}
	out := new(ShardSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardingDatabase) DeepCopyInto(out *ShardingDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardingDatabase.
func (in *ShardingDatabase) DeepCopy() *ShardingDatabase {
	if in == nil {
		return nil
	}
	out := new(ShardingDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShardingDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardingDatabaseList) DeepCopyInto(out *ShardingDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ShardingDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardingDatabaseList.
func (in *ShardingDatabaseList) DeepCopy() *ShardingDatabaseList {
	if in == nil {
		return nil
	}
	out := new(ShardingDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShardingDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardingDatabaseSpec) DeepCopyInto(out *ShardingDatabaseSpec) {
	*out = *in
	if in.Shard != nil {
		in, out := &in.Shard, &out.Shard
		*out = make([]ShardSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = make([]CatalogSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gsm != nil {
		in, out := &in.Gsm, &out.Gsm
		*out = make([]GsmSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortMappings != nil {
		in, out := &in.PortMappings, &out.PortMappings
		*out = make([]PortMapping, len(*in))
		copy(*out, *in)
	}
	if in.GsmShardSpace != nil {
		in, out := &in.GsmShardSpace, &out.GsmShardSpace
		*out = make([]GsmShardSpaceSpec, len(*in))
		copy(*out, *in)
	}
	if in.GsmShardGroup != nil {
		in, out := &in.GsmShardGroup, &out.GsmShardGroup
		*out = make([]GsmShardGroupSpec, len(*in))
		copy(*out, *in)
	}
	if in.ShardRegion != nil {
		in, out := &in.ShardRegion, &out.ShardRegion
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.GsmService != nil {
		in, out := &in.GsmService, &out.GsmService
		*out = make([]GsmServiceSpec, len(*in))
		copy(*out, *in)
	}
	if in.DbSecret != nil {
		in, out := &in.DbSecret, &out.DbSecret
		*out = new(SecretDetails)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardingDatabaseSpec.
func (in *ShardingDatabaseSpec) DeepCopy() *ShardingDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(ShardingDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardingDatabaseStatus) DeepCopyInto(out *ShardingDatabaseStatus) {
	*out = *in
	if in.Shard != nil {
		in, out := &in.Shard, &out.Shard
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.Gsm.DeepCopyInto(&out.Gsm)
	if in.CrdStatus != nil {
		in, out := &in.CrdStatus, &out.CrdStatus
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardingDatabaseStatus.
func (in *ShardingDatabaseStatus) DeepCopy() *ShardingDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(ShardingDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleInstanceDatabase) DeepCopyInto(out *SingleInstanceDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleInstanceDatabase.
func (in *SingleInstanceDatabase) DeepCopy() *SingleInstanceDatabase {
	if in == nil {
		return nil
	}
	out := new(SingleInstanceDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SingleInstanceDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleInstanceDatabaseAdminPassword) DeepCopyInto(out *SingleInstanceDatabaseAdminPassword) {
	*out = *in
	if in.KeepSecret != nil {
		in, out := &in.KeepSecret, &out.KeepSecret
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleInstanceDatabaseAdminPassword.
func (in *SingleInstanceDatabaseAdminPassword) DeepCopy() *SingleInstanceDatabaseAdminPassword {
	if in == nil {
		return nil
	}
	out := new(SingleInstanceDatabaseAdminPassword)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleInstanceDatabaseImage) DeepCopyInto(out *SingleInstanceDatabaseImage) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleInstanceDatabaseImage.
func (in *SingleInstanceDatabaseImage) DeepCopy() *SingleInstanceDatabaseImage {
	if in == nil {
		return nil
	}
	out := new(SingleInstanceDatabaseImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleInstanceDatabaseInitParams) DeepCopyInto(out *SingleInstanceDatabaseInitParams) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleInstanceDatabaseInitParams.
func (in *SingleInstanceDatabaseInitParams) DeepCopy() *SingleInstanceDatabaseInitParams {
	if in == nil {
		return nil
	}
	out := new(SingleInstanceDatabaseInitParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleInstanceDatabaseList) DeepCopyInto(out *SingleInstanceDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SingleInstanceDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleInstanceDatabaseList.
func (in *SingleInstanceDatabaseList) DeepCopy() *SingleInstanceDatabaseList {
	if in == nil {
		return nil
	}
	out := new(SingleInstanceDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SingleInstanceDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleInstanceDatabasePersistence) DeepCopyInto(out *SingleInstanceDatabasePersistence) {
	*out = *in
	if in.SetWritePermissions != nil {
		in, out := &in.SetWritePermissions, &out.SetWritePermissions
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleInstanceDatabasePersistence.
func (in *SingleInstanceDatabasePersistence) DeepCopy() *SingleInstanceDatabasePersistence {
	if in == nil {
		return nil
	}
	out := new(SingleInstanceDatabasePersistence)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleInstanceDatabaseResource) DeepCopyInto(out *SingleInstanceDatabaseResource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleInstanceDatabaseResource.
func (in *SingleInstanceDatabaseResource) DeepCopy() *SingleInstanceDatabaseResource {
	if in == nil {
		return nil
	}
	out := new(SingleInstanceDatabaseResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleInstanceDatabaseResources) DeepCopyInto(out *SingleInstanceDatabaseResources) {
	*out = *in
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = new(SingleInstanceDatabaseResource)
		**out = **in
	}
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = new(SingleInstanceDatabaseResource)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleInstanceDatabaseResources.
func (in *SingleInstanceDatabaseResources) DeepCopy() *SingleInstanceDatabaseResources {
	if in == nil {
		return nil
	}
	out := new(SingleInstanceDatabaseResources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleInstanceDatabaseSpec) DeepCopyInto(out *SingleInstanceDatabaseSpec) {
	*out = *in
	if in.ServiceAnnotations != nil {
		in, out := &in.ServiceAnnotations, &out.ServiceAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.FlashBack != nil {
		in, out := &in.FlashBack, &out.FlashBack
		*out = new(bool)
		**out = **in
	}
	if in.ArchiveLog != nil {
		in, out := &in.ArchiveLog, &out.ArchiveLog
		*out = new(bool)
		**out = **in
	}
	if in.ForceLogging != nil {
		in, out := &in.ForceLogging, &out.ForceLogging
		*out = new(bool)
		**out = **in
	}
	if in.TrueCacheServices != nil {
		in, out := &in.TrueCacheServices, &out.TrueCacheServices
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.AdminPassword.DeepCopyInto(&out.AdminPassword)
	out.Image = in.Image
	in.Persistence.DeepCopyInto(&out.Persistence)
	if in.InitParams != nil {
		in, out := &in.InitParams, &out.InitParams
		*out = new(SingleInstanceDatabaseInitParams)
		**out = **in
	}
	in.Resources.DeepCopyInto(&out.Resources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleInstanceDatabaseSpec.
func (in *SingleInstanceDatabaseSpec) DeepCopy() *SingleInstanceDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(SingleInstanceDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleInstanceDatabaseStatus) DeepCopyInto(out *SingleInstanceDatabaseStatus) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DgBroker != nil {
		in, out := &in.DgBroker, &out.DgBroker
		*out = new(string)
		**out = **in
	}
	if in.StandbyDatabases != nil {
		in, out := &in.StandbyDatabases, &out.StandbyDatabases
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.InitParams = in.InitParams
	in.Persistence.DeepCopyInto(&out.Persistence)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleInstanceDatabaseStatus.
func (in *SingleInstanceDatabaseStatus) DeepCopy() *SingleInstanceDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(SingleInstanceDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSpec) DeepCopyInto(out *SourceSpec) {
	*out = *in
	in.K8sAdbBackup.DeepCopyInto(&out.K8sAdbBackup)
	in.PointInTime.DeepCopyInto(&out.PointInTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSpec.
func (in *SourceSpec) DeepCopy() *SourceSpec {
	if in == nil {
		return nil
	}
	out := new(SourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSpec) DeepCopyInto(out *TargetSpec) {
	*out = *in
	in.K8sAdb.DeepCopyInto(&out.K8sAdb)
	in.OciAdb.DeepCopyInto(&out.OciAdb)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSpec.
func (in *TargetSpec) DeepCopy() *TargetSpec {
	if in == nil {
		return nil
	}
	out := new(TargetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmNetworkDetails) DeepCopyInto(out *VmNetworkDetails) {
	*out = *in
	if in.VcnName != nil {
		in, out := &in.VcnName, &out.VcnName
		*out = new(string)
		**out = **in
	}
	if in.SubnetName != nil {
		in, out := &in.SubnetName, &out.SubnetName
		*out = new(string)
		**out = **in
	}
	if in.ScanDnsName != nil {
		in, out := &in.ScanDnsName, &out.ScanDnsName
		*out = new(string)
		**out = **in
	}
	if in.ListenerPort != nil {
		in, out := &in.ListenerPort, &out.ListenerPort
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmNetworkDetails.
func (in *VmNetworkDetails) DeepCopy() *VmNetworkDetails {
	if in == nil {
		return nil
	}
	out := new(VmNetworkDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WalletSpec) DeepCopyInto(out *WalletSpec) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	in.Password.DeepCopyInto(&out.Password)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WalletSpec.
func (in *WalletSpec) DeepCopy() *WalletSpec {
	if in == nil {
		return nil
	}
	out := new(WalletSpec)
	in.DeepCopyInto(out)
	return out
}
